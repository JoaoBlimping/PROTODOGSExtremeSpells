[gd_scene load_steps=12 format=1]

[ext_resource path="res://battle/pics/beanKing.png" type="Texture" id=1]
[ext_resource path="res://battle/sounds/enough.wav" type="Sample" id=2]
[ext_resource path="res://battle/sounds/seccoDie.wav" type="Sample" id=3]
[ext_resource path="res://battle/pics/beanAura.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends \"../scripts/actor.gd\"

onready var greenBullet = preload(\"res://battle/objects/greenBullet.tscn\")
onready var yellowBullet = preload(\"res://battle/objects/yellowBullet.tscn\")
onready var grass = preload(\"res://battle/objects/grassBullet.tscn\")
onready var player = get_node(\"/root/level/actors/player\")
onready var particles = get_node(\"particles\")


func _ready():
	addRoutine(\"flirt1\")
	addRoutine(\"python\")
	addRoutine(\"flirt2\")
	addRoutine(\"sprout\")
	addRoutine(\"flirt3\")
	addRoutine(\"grass\")
	addRoutine(\"storm\")
	addRoutine(\"death\")
	
	
	
	
	
func flirt1():
	health = 70
	var height = 7
	var tick = createTimer(0.06)
	while (true):
		var playerPos = player.get_pos()
		
		for i in range(height):
			for b in range(i):
				if (!(b == 0 || b == i - 1)): continue
				var offset = ((b + 1) - float(i + 1) / 2)
				shootFrom(yellowBullet,PI,Vector2(playerPos.x + offset * 10,0),300)
			yield(tick.r(),T)
		if (isDone()): return
		yield(tick.r(),T)


func flirt2():
	health = 80
	var height = 6
	var tick = createTimer(0.1)
	while (true):
		var playerPos = player.get_pos()
		
		for i in range(height):
			for b in range(i):
				if (!(b == 0 || b == i - 1)): continue
				var offset = ((b + 1) - float(i + 1) / 2)
				shootFrom(yellowBullet,PI,Vector2(playerPos.x + offset * 10,2),200)
				shootFrom(greenBullet,0,Vector2(playerPos.x + offset * 10,590),200)
			yield(tick.r(),T)
		if (isDone()): return
		yield(tick.r(),T)


func flirt3():
	health = 80
	var height = 20
	var tick = createTimer(0.08)
	var endTick = createTimer(1)
	while (true):
		var playerPos = player.get_pos()
		
		for i in range(height):
			for b in range(i):
				if (!(b == 0 || b == i - 1)): continue
				var offset = ((b + 1) - float(i + 1) / 2)
				shootFrom(yellowBullet,PI,Vector2(playerPos.x + offset * 10,2),250)
				shootFrom(greenBullet,0,Vector2(playerPos.x + offset * 10,590),250)
				shootFrom(yellowBullet,PI * 3 / 2,Vector2(260,playerPos.y + offset * 10),250)
				shootFrom(greenBullet,PI / 2,Vector2(760,playerPos.y + offset * 10),250)
			yield(tick.r(),T)
		if (isDone()): return
		yield(endTick.r(),T)


func python():
	health = 80
	var tick1 = createTimer(0.1)
	var tick2 = createTimer(0.5)
	var angle = 0
	while (true):
		var bullets = []
		for i in range(20):
			angle += 0.7
			bullets.append(weakref(shoot(greenBullet,get_pos().angle_to_point(player.get_pos()) + sin(angle) / 6)))
			yield(tick1.r(),T)
		yield(tick2.r(),T)
		var playerPos = player.get_pos()
		for bullet in bullets:
			var ref = bullet.get_ref()
			if (!ref): continue
			shootFrom(yellowBullet,ref.get_pos().angle_to_point(playerPos),ref.get_pos(),200)
		if (isDone()): return

	
func sprout():
	health = 120
	var tick = createTimer(0.3)
	var pos = get_pos()
	var jump = 15
	while (true):
		shootFrom(greenBullet,0,pos,0)
		for i in range(6): shoot(yellowBullet,randf() * PI * 2)
		var angle = player.get_pos().angle_to_point(pos)
		pos.x += sin(angle) * jump
		pos.y += cos(angle) * jump
		yield(tick.r(),T)
		if (isDone()): return


func grass():
	health = 100
	var bullets = 15
	var angle = 0
	var timer1 = createTimer(2.5)
	while (true):
		angle += 0.6
		for i in range(bullets):
			shoot(grass,(PI * 2) / bullets * i + angle)
			shoot(greenBullet,(PI * 2) / bullets * (i + 0.5) + angle)
		if (isDone()): return
		yield(timer1.r(),T)


func storm():
	animation.play(\"addAura\")
	health = 120
	var tick1 = createTimer(0.09)
	var angle = 0
	var aura = get_node(\"aura\")
	var points = aura.get_children()
	while (true):
		angle += 1
		for i in range(8):
			for point in points:
				aura.rotate(0.01)
				angle += 0.03
				shoot(greenBullet,angle,point)
			yield(tick1,T)
		if (isDone()): return


func death():
	sound.play(\"seccoDie\")
	var tick = createTimer(0.3)
	for i in range(20):
		set_scale(Vector2(1,1) / i)
		particles.set_global_scale(Vector2(1,1))
		yield(tick.r(),T)
	done()"

[sub_resource type="ConvexPolygonShape2D" id=2]

custom_solver_bias = 0.0
points = Vector2Array( 58.176, 51.4333, 96.7245, 69.0611, -88.4636, 68.2862 )

[sub_resource type="ConvexPolygonShape2D" id=3]

custom_solver_bias = 0.0
points = Vector2Array( -88.4636, 68.2862, -93.3064, 44.6534, 36.2866, 34.5804, 58.176, 51.4333 )

[sub_resource type="ConvexPolygonShape2D" id=4]

custom_solver_bias = 0.0
points = Vector2Array( 85.8767, -22.177, 58.176, 51.4333, 36.2866, 34.5804, 59.1445, -67.6992 )

[sub_resource type="ConvexPolygonShape2D" id=5]

custom_solver_bias = 0.0
points = Vector2Array( -56.8886, -10.9418, -59.7943, -39.2236, 59.1445, -67.6992, 36.2866, 34.5804 )

[sub_resource type="SampleLibrary" id=6]

samples/enough = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 2 )
}
samples/seccoDie = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 3 )
}

[sub_resource type="Animation" id=7]

resource/name = "addAura"
length = 1.0
loop = false
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("aura:visibility/opacity")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 1 ),
"transitions": FloatArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="beanKing" type="Sprite"]

transform/pos = Vector2( -5.9596, -10.7181 )
texture = ExtResource( 1 )
offset = Vector2( 5.9596, 10.7181 )
script/script = SubResource( 1 )
flippy = false
walky = false
target = true
speed = 100

[node name="hitbox" type="Area2D" parent="."]

editor/display_folded = true
visibility/visible = false
material/use_parent = true
transform/pos = Vector2( 5.9596, 10.7181 )
input/pickable = true
shapes/0/shape = SubResource( 2 )
shapes/0/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/0/trigger = false
shapes/1/shape = SubResource( 3 )
shapes/1/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/1/trigger = false
shapes/2/shape = SubResource( 4 )
shapes/2/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/2/trigger = false
shapes/3/shape = SubResource( 5 )
shapes/3/transform = Matrix32( 1, 0, 0, 1, 0, 0 )
shapes/3/trigger = false
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="hitbox"]

visibility/behind_parent = true
build_mode = 0
polygon = Vector2Array( -88.4636, 68.2862, 96.7245, 69.0611, 58.176, 51.4333, 85.8767, -22.177, 59.1445, -67.6992, -59.7943, -39.2236, -56.8886, -10.9418, 36.2866, 34.5804, -93.3064, 44.6534 )
shape_range = Vector2( 0, 3 )
trigger = false

[node name="sound" type="SamplePlayer" parent="."]

config/polyphony = 1
config/samples = SubResource( 6 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[node name="aura" type="Sprite" parent="."]

editor/display_folded = true
visibility/opacity = 0.0
visibility/behind_parent = true
visibility/blend_mode = 1
transform/pos = Vector2( 7.19199, 12.2964 )
texture = ExtResource( 4 )
offset = Vector2( 12.315, 6.23521 )

[node name="1" type="Position2D" parent="aura"]

transform/pos = Vector2( -206.988, -106.363 )

[node name="2" type="Position2D" parent="aura"]

transform/pos = Vector2( 0.787094, -237.021 )

[node name="3" type="Position2D" parent="aura"]

transform/pos = Vector2( 217.754, -128.188 )

[node name="4" type="Position2D" parent="aura"]

transform/pos = Vector2( 234.822, 104.526 )

[node name="5" type="Position2D" parent="aura"]

transform/pos = Vector2( 26.9774, 250.946 )

[node name="6" type="Position2D" parent="aura"]

visibility/blend_mode = 1
transform/pos = Vector2( -206.518, 118.023 )

[node name="animation" type="AnimationPlayer" parent="."]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/addAura = SubResource( 7 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = ""


